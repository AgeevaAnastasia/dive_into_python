"""
–ó–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
–§—É–Ω–∫—Ü–∏—è –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è —Å–≤–æ–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤.
–ù–∞–ø—Ä–∏–º–µ—Ä:"""

def quadratic_equations(a, b=0, c=0):
    d = b ** 2 - 4 * a * c
    if d > 0:
        return (-b + d ** 0.5) / (2 * a), (-b - d ** 0.5) / (2 * a)
    if d == 0:
        return -b / (2 * a)
print(quadratic_equations(2, -9))

"""–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è a –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–µ—Ä–µ–¥–∞–Ω–∞ –≤ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ. –ï—Å–ª–∏ –Ω–µ –ø–µ—Ä–µ–¥–∞—Ç—å 2-–π
–∏/–∏–ª–∏ 3-–π –∞—Ä–≥—É–º–µ–Ω—Ç, –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–æ–ø–∞–¥—É—Ç –Ω—É–ª–∏ –∫–∞–∫ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.

üî• PEP-8! –î–ª—è —É–∫–∞–∑–∞–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∑–Ω–∞–∫
—Ä–∞–≤–µ–Ω—Å—Ç–≤–∞. –î–æ –∏ –ø–æ—Å–ª–µ —Ç–∞–∫–æ–≥–æ —Ä–∞–≤–Ω–æ –ø—Ä–æ–±–µ–ª—ã –Ω–µ —Å—Ç–∞–≤—è—Ç—Å—è.



–ò–∑–º–µ–Ω—è–µ–º—ã–π –æ–±—ä–µ–∫—Ç –∫–∞–∫ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
–í –∫–∞—á–µ—Å—Ç–≤–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –Ω–µ–ª—å–∑—è —É–∫–∞–∑—ã–≤–∞—Ç—å –∏–∑–º–µ–Ω—è–µ–º—ã —Ç–∏–ø—ã: —Å–ø–∏—Å–∫–∏,
—Å–ª–æ–≤–∞—Ä–∏ –∏ —Ç.–ø. –≠—Ç–æ –ø—Ä–∏–≤–µ–¥—ë—Ç –∫ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º:"""

def from_one_to_n(n, data=[]):
    for i in range(1, n + 1):
        data.append(i)
    return data
new_list = from_one_to_n(5)
print(f'{new_list = }')
other_list = from_one_to_n(7)
print(f'{other_list = }')

"""other_list —Å–æ–¥–µ—Ä–∂–∏—Ç –≤ —Å–µ–±–µ –∏ –Ω–æ–≤—É—é –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏ —Ç—É, –∫–æ—Ç–æ—Ä–∞—è –±—ã–ª–∞ –≤ —Å–ø–∏—Å–∫–µ
new_list. –°–≤—è–∑–∞–Ω–æ —ç—Ç–æ —Å —Ç–µ–º, —á—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∑–∞–¥–∞—ë—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏
—Å–æ–∑–¥–∞–Ω–∏–∏ —Ñ—É–Ω–∫—Ü–∏–∏. –ö–∞–∂–¥—ã–π –≤—ã–∑–æ–≤ ‚Äî —Ä–∞–±–æ—Ç–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º data –∏ –µ–≥–æ –æ—á–µ—Ä–µ–¥–Ω–æ–µ
–∏–∑–º–µ–Ω–µ–Ω–∏–µ.
–ï—Å–ª–∏ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –Ω—É–∂–µ–Ω –∏–∑–º–µ–Ω—è–µ–º—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö,
–∏—Å–ø–æ–ª—å–∑—É—é—Ç –æ—Å–æ–±—ã–π –ø—Ä–∏—ë–º —Å None"""

def from_one_to_n(n, data=None):
    if data is None:
        data = []
    for i in range(1, n + 1):
        data.append(i)
    return data

"""–ï—Å–ª–∏ –∏–∑–º–µ–Ω—è–µ–º—ã–π –æ–±—ä–µ–∫—Ç –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω, –æ–Ω —Å–æ–∑–¥–∞—ë—Ç—Å—è –ø–æ –Ω–æ–≤–æ–π –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –≤—ã–∑–æ–≤–∞
—Ñ—É–Ω–∫—Ü–∏–∏.
"""